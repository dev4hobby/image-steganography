import type { NextPage } from 'next'
import Button from '@mui/material/Button'
import Stack from '@mui/material/Stack'
import Alert from '@mui/material/Alert'

import BasicAlerts from '../components/alert'
import Head from 'next/head'
import styles from '../styles/Home.module.css'

import { useState } from 'react'

const Home: NextPage = () => {
  const [messageForHide, setMessageForHide] = useState('')
  const [imageForHide, setImageForHide] = useState('')
  const [resultImage, setResultImage] = useState('')
  const [imageForSeek, setImageForSeek] = useState('')
  const [extractedMessage, setExtractedMessage] = useState('')

  const handleHideMessageChange = (e: any) => {
    setMessageForHide(e.target.value)
  }
  const handleHideImageChange = (e: any) => {
    setImageForHide(e.target.files[0])
  }
  const handleHide = async (e: any) => {
    e.preventDefault()
    let formData = new FormData()
    formData.append('file', imageForHide)
    formData.append('message', messageForHide)
    const response = await fetch('http://localhost:8000/hide', {
      method: 'POST',
      body: formData
    })
    const body = response.body
    const reader = body!.getReader()
    const { value: uint8array } = await reader.read()
    // Get from client side
    if (uint8array !== undefined){
      const url = await URL.createObjectURL(new Blob([uint8array], { type: 'image/png' }))
      // TODO: Implement image data to passing into `setResultImage`
      // setResultImage(uint8array)
      window.alert('Done')
    }
  }

  const passImageToSeekMessage = (e: any) => {
    setImageForSeek(imageForHide)
  }

  const handleSeekImageChange = (e: any) => {
    setImageForSeek(e.target.files[0])
  }

  const handleResultImage = (e: any) => {
    setResultImage(e.target.files[0])
  }

  const handleSeek = async (e: any) => {
    e.preventDefault()
    setExtractedMessage("If it's taking too long, it's likely that the hidden message doesn't exist.")
    let formData = new FormData()
    formData.append('file', imageForSeek)
    const response = await fetch('http://localhost:8000/seek', {
      method: 'POST',
      body: formData
    }).then(res => res.json())
    .then(data => {
      setExtractedMessage(data.message)
    })
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Steganography</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {/* <form method="post" action="http://localhost:8000/hide" encType="multipart/form-data"> */}
        <h1>Hide</h1>
        <form onSubmit={handleHide} style={{width:'100%'}}>
          <div>
            <label htmlFor="contained-button-file-for-hide">
              <input style={{visibility:'hidden'}} accept=".jpg, .jpeg, .png, .bmp" id="contained-button-file-for-hide" multiple type="file" onChange={handleHideImageChange} />
              <Button style={{width: '100%', backgroundColor: imageForHide ? '#03fca9' : '#282029', color: imageForHide ? '#000000' : '#ffffff', marginBottom: '3vw'}} variant="contained" component="span">
                { imageForHide ? "Good, type your message" : 'Choose image to hide message'}
              </Button>
            </label>
            <textarea style={{width:'100%'}} id="message" name="message" rows={10} cols={50} placeholder="type what you wanna hide" value={messageForHide} onChange={handleHideMessageChange}/>
          </div>
          <div>
            <Button onClick={handleHide} style={{width: resultImage ? '50%' : '100%'}} disabled={imageForHide ? messageForHide ? false : true : true} variant="contained" component="span">
                Submit
            </Button>
            { resultImage ? <Button style={{width: '50%'}} onClick={passImageToSeekMessage}>Pass image to below</Button> : <Button style={{visibility:'hidden'}} /> }
          </div>
          
        </form>
        
        <h1>Seek</h1>
        <form onSubmit={handleSeek} style={{width:'100%'}}>
          <div>
            
            <label htmlFor="contained-button-file-for-seek">
              <input style={{visibility:'hidden'}} accept=".jpg, .jpeg, .png, .bmp" id="contained-button-file-for-seek" multiple type="file" onChange={handleSeekImageChange} />
              <Button style={{width:'100%', backgroundColor: imageForSeek ? '#03fca9' : '#282029', color: imageForSeek ? '#000000' : '#ffffff', marginBottom: '3vw'}} variant="contained" component="span">
                { imageForSeek ? "Good, let's dig in" : 'Choose image to seek message'}
              </Button>
            </label>
            <label htmlFor="seek-message">{ imageForSeek ? 'Your message is ...' : 'Waiting ...' }</label><br />
            <p id="seek-message">{extractedMessage}</p>
          </div>
          <div>
            <Button onClick={handleSeek} style={{width:'100%'}} disabled={imageForSeek ? false : true} variant="contained" component="span">
                Submit
            </Button>
          </div>
        </form>
      </main>
      <footer className={styles.footer}>
        D3fau1t: Steganography Web
      </footer>
    </div>
  )
}

export default Home
